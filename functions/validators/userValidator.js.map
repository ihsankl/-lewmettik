{"version":3,"file":"userValidator.js","names":["schema","Joi","object","name","string","label","max","required","userValidator","req","res","next","body","then","catch","err","findUser","userService","getUser","params","id"],"sources":["../../src/validators/userValidator.js"],"sourcesContent":["import Joi from '@hapi/joi';\n\nimport validate from '../utils/validate';\nimport * as userService from '../services/userService';\n\n// Validation schema\nconst schema = Joi.object({\n  name: Joi.string()\n    .label('Name')\n    .max(90)\n    .required()\n});\n\n/**\n * Validate create/update user request.\n *\n * @param   {Object}   req\n * @param   {Object}   res\n * @param   {Function} next\n * @returns {Promise}\n */\nfunction userValidator(req, res, next) {\n  return validate(req.body, schema)\n    .then(() => next())\n    .catch(err => next(err));\n}\n\n/**\n * Validate users existence.\n *\n * @param   {Object}   req\n * @param   {Object}   res\n * @param   {Function} next\n * @returns {Promise}\n */\nfunction findUser(req, res, next) {\n  return userService\n    .getUser(req.params.id)\n    .then(() => next())\n    .catch(err => next(err));\n}\n\nexport { findUser, userValidator };\n"],"mappings":";;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAEA;AACA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;EACxBC,IAAI,EAAEF,aAAIG,MAAJ,GACHC,KADG,CACG,MADH,EAEHC,GAFG,CAEC,EAFD,EAGHC,QAHG;AADkB,CAAX,CAAf;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;EACrC,OAAO,uBAASF,GAAG,CAACG,IAAb,EAAmBZ,MAAnB,EACJa,IADI,CACC,MAAMF,IAAI,EADX,EAEJG,KAFI,CAEEC,GAAG,IAAIJ,IAAI,CAACI,GAAD,CAFb,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBP,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;EAChC,OAAOM,WAAW,CACfC,OADI,CACIT,GAAG,CAACU,MAAJ,CAAWC,EADf,EAEJP,IAFI,CAEC,MAAMF,IAAI,EAFX,EAGJG,KAHI,CAGEC,GAAG,IAAIJ,IAAI,CAACI,GAAD,CAHb,CAAP;AAID"}